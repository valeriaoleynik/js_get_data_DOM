{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,IAAM,EAAQ,SAAS,gBAAgB,CAAC,eAClC,EAAY,SAAS,aAAa,CAAC,qBACnC,EAAc,SAAS,aAAa,CAAC,uBAErC,EAAqB,SAAC,CAA5B,EACE,OAAO,EAAO,cAAc,CAAC,QAC/B,EAEM,EAAa,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,EAAI,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,EAAA,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,EAAA,I,A,W,M,A,U,wI,G,EAAO,GAAG,CAAC,SAAC,CAAnC,EACE,OAAO,OAAO,EAAK,SAAS,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,IAC/C,GACM,EAAQ,EAAW,MAAM,CAAC,SAAC,CAAA,CAAK,CAAtC,EAA4C,OAAA,EAAM,CAAG,EAAA,GAC/C,EAAU,KAAK,KAAK,CAAC,EAAQ,EAAW,MAAM,EAE9C,EAAiB,EAAmB,GACpC,EAAkB,EAAmB,EAE3C,CAAA,EAAY,WAAW,CAAG,EAC1B,EAAU,WAAW,CAAG","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar items = document.querySelectorAll(\".population\");\nvar spanTotal = document.querySelector(\".total-population\");\nvar spanAverage = document.querySelector(\".average-population\");\nvar thousandsSeparator = function(number) {\n    return number.toLocaleString(\"en-US\");\n};\nvar population = _to_consumable_array(items).map(function(item) {\n    return Number(item.innerText.split(\",\").join(\"\"));\n});\nvar total = population.reduce(function(sum, n) {\n    return sum + n;\n}, 0);\nvar average = Math.floor(total / population.length);\nvar formattedTotal = thousandsSeparator(total);\nvar formatteAverage = thousandsSeparator(average);\nspanAverage.textContent = formatteAverage;\nspanTotal.textContent = formattedTotal;\n\n//# sourceMappingURL=index.dcfc53e7.js.map\n","'use strict';\n\nconst items = document.querySelectorAll('.population');\nconst spanTotal = document.querySelector('.total-population');\nconst spanAverage = document.querySelector('.average-population');\n\nconst thousandsSeparator = (number) => {\n  return number.toLocaleString('en-US');\n};\n\nconst population = [...items].map((item) => {\n  return Number(item.innerText.split(',').join(''));\n});\nconst total = population.reduce((sum, n) => sum + n, 0);\nconst average = Math.floor(total / population.length);\n\nconst formattedTotal = thousandsSeparator(total);\nconst formatteAverage = thousandsSeparator(average);\n\nspanAverage.textContent = formatteAverage;\nspanTotal.textContent = formattedTotal;\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","items","document","querySelectorAll","spanTotal","querySelector","spanAverage","thousandsSeparator","number","toLocaleString","population","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","map","item","Number","innerText","split","join","total","reduce","sum","average","Math","floor","formattedTotal","formatteAverage","textContent"],"version":3,"file":"index.dcfc53e7.js.map"}